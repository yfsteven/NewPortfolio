---
// ProjectsSection.astro - aligned to match your header section
import ProjectCard from "./ProjectCard.astro"
---

<div class="max-w-[737px] mx-auto px-4 md:px-0">
  <h2 class="text-2xl font-bold mb-6 dark:text-neutral-300">Projects</h2>
  
  <input 
    type="text" 
    id="name-search" 
    placeholder="Search by name" 
    class="w-full p-3 mb-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-gray dark:bg-white"
  />
  <h2 class="text-2xl font-bold mb-6 dark:text-neutral-300">Technical Skills & Experience</h2>
  <div class="flex flex-wrap gap-2 mb-6">
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="python">Python</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="react">React</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="astro">Astro</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="django">Django</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="aws">AWS</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="css">CSS</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="javascript">JavaScript</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="html">HTML</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="tailwind">TailwindCSS</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="docker">Docker</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="supabase">Supabase</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="firebase">Firebase</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="Java">Java</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="clangs">C/C++</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="sql">SQL</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="typescript">TypeScript</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="node.js">Node.js</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="express.js">Express.js</button>
    <button class="tag px-4 py-2 bg-gray-100 rounded-md transition-colors hover:bg-blue-500 hover:text-white" data-tag="mongodb">MongoDB</button>
    <button class="reset tag px-4 py-2 bg-blue-100 rounded-2xl transition-colors hover:bg-black hover:text-white">Reset</button>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <ProjectCard
       title="AI Financial Trading Agent"
       description="An intelligent financial trading agent built with LangChain and LangGraph that provides comprehensive stock analysis, technical indicators, and market insights. Features real-time stock data, RSI analysis, portfolio tracking, market movers detection, earnings calendar, and automated financial news analysis with Docker containerization."
       tags={["Python", "LangChain", "LangGraph", "Docker"]}
       githubUrl="https://github.com/yfsteven/my-ai-agent"
       dataName="ai trading agent - financial analysis"
      />

    <ProjectCard
        title="SimpleAnki"
        description="A CLI Python program that easily creates Japanese Anki cards (a popular space repetition flashcard application) by utilizing requests, ElevenLabs for audio generation, and the AnkiConnect addon HTTP API. This has helped me get the Japanese Language Proficiency Test N1 certificate."
        tags={["Python"]}
        githubUrl="https://github.com/yfsteven/Japanese-Anki-Cards-Automation-with-AI"
        dataName="simpleanki - make japanese anki cards"
      />
      
      <ProjectCard
        title="Rick and Morty Memory Card Game"
        description="A memory card game built on React and Rick and Morty public API"
        tags={["React", "CSS", "JavaScript", "HTML"]}
        githubUrl="https://github.com/yfsteven/RickandMortyMemoryCardGame"
        dataName="rick and morty memory card game"
      />

      <ProjectCard
        title="Mercari Engineer Vocabulary REST API"
        description="A REST API service for managing Japanese-English vocabulary words for engineers. Built with Node.js, Express.js, and MongoDB, deployed on Fly.io. Features full CRUD operations with search functionality for Japanese terms and example sentences."
        tags={["Node.js", "Express.js", "MongoDB", "JavaScript"]}
        githubUrl="https://github.com/yfsteven/mercari-engineer-vocabulary-list-rest-api"
        dataName="mercari engineer vocabulary list rest api"
      />
      
      <ProjectCard
        title="Line Clone"
        description="A React clone of a social media website called 'Line'. Firebase handles the database and Google authentication"
        tags={["Firebase", "React", "CSS", "HTML", "JavaScript"]}
        githubUrl="https://github.com/yfsteven/line-clone"
        dataName="line clone"
      />

      <ProjectCard
        title="YouTube Clip Maker"
        description="A program that generates YouTube Shorts from videos that has YouTube's 'Key Moments' feature enabled, focusing on highly replayed sections. It uses AI to automatically transcribe these segments and uploads the resulting Shorts using a YouTube wrapper API."
        tags={["Python"]}
        githubUrl="https://github.com/yfsteven/YouTube-Clip-Maker"
        dataName="youtube clip maker"
      />
      
      <ProjectCard
        title="Internet Mastery Automation"
        description="Developed this Python script to streamline operations for an Amazon FBA-focused e-commerce business. The software automates the process of identifying profitable items for resale on Amazon into a neatly formatted Excel spreadsheet."
        tags={["Python"]}
        githubUrl="https://github.com/yfsteven/IMAutomation"
        youtubeUrl="https://www.youtube.com/watch?v=1ulTGVZ8ZoA"
        dataName="imautomation"
      />
      
      <ProjectCard
        title="MathTutoringInNYC.com"
        description="A web app built entirely on 'vibecoding' by using Anthropic Claude AI. Tech stack consists of React Router, TypeScript, TailwindCSS, and Supabase. Deployed by Vercel. It offers private tutoring services, building a growing client base."
        tags={["React", "Supabase", "CSS", "HTML", "TypeScript", "TailwindCSS"]}
        websiteUrl="https://mathtutoringinnyc.com"
        dataName="math tutoring in nyc"
      />
      <ProjectCard
        title="Old Portfolio Website"
        description="My old portfolio website, yfsteven.site, is running under Django framework and AWS EC2 server."
        tags={["CSS", "HTML", "Python", "Django", "AWS"]}
        websiteUrl="https://yfsteven.site"
        dataName="old portfolio website"
      />

      <ProjectCard
        title="Dynamic Programming Research"
        description="Final Project for Introduction to Computational Science - Professor Thiel, New York City College of Technology. A comprehensive paper report exploring dynamic programming algorithms and their computational applications."
        tags={["Python"]}
        githubUrl="https://github.com/yfsteven/dynamic_programming"
        dataName="dynamic programming"
      />
  </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function (){
        const nameSearch = document.getElementById("name-search");
        const tags = document.querySelectorAll(".tag");
        const reset = document.querySelector(".reset");
        const projects = document.querySelectorAll(".project");

        function filterProjects() {
            const nameQuery = nameSearch.value.toLowerCase();

            projects.forEach((project) => {
                const name = project.getAttribute("data-name");
                const nameMatch = name.includes(nameQuery);

                if (nameMatch) {
                    project.style.display = "";
                } else {
                    project.style.display = "none";
                }
            })
        }

        tags.forEach((tag) => {
            tag.addEventListener("click", function () {
                const selectedTag = this.getAttribute("data-tag");

                projects.forEach((project) => {
                    const projectTags = project.getAttribute("data-tags");
                    const tagMatch = projectTags.includes(selectedTag);
        
                    if (tagMatch) {
                        project.style.display = "";
                    } else {
                        project.style.display = "none";
                    }
                })
            })
        })

        nameSearch.addEventListener("keyup", filterProjects);

        reset.addEventListener("click", function() 
        {
            projects.forEach((project) => 
            {
              project.style.display = "";
            });
        });
    })
</script>
